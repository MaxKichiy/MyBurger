{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","ss","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","ord","Spinner","id","axios"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,MAAQ,uB,4ECqCXC,EAnCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,SAGVP,EAAGJ,KAVN,IAUaI,EAAGH,WAIpB,OACE,yBAAKW,UAAWC,IAAGlB,OACjB,2CAAiBO,GACjB,qCACS,uCAAaN,EAAMkB,MAAMC,QAAQ,O,wCCqBjCC,uBAfS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAoBL,EAAOE,QAG3BP,CAGbW,aAjDa,SAAC/B,GACdgC,qBAAU,WACRhC,EAAM6B,cAAc7B,EAAMyB,MAAOzB,EAAM2B,UActC,IACH,IAAIM,EAAM,kBAACC,EAAA,EAAD,MAWV,OAVKlC,EAAMwB,UACTS,EAAMjC,EAAMsB,OAAOf,KAAI,SAACgB,GAAD,OACrB,kBAAC,EAAD,CACEtB,YAAasB,EAAMtB,YACnBiB,OAAQK,EAAML,MACdT,IAAKc,EAAMY,SAKV,6BAAMF,KAqBYG","file":"static/js/5.372f8079.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__g2rFk\"};","import React from 'react';\r\nimport ss from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        key={ig.name}\r\n        style={{\r\n          textTransform: 'capitalize',\r\n          display: 'inline-block',\r\n          margin: '0 8px',\r\n          border: '1px solid #ccc',\r\n          padding: '10px',\r\n        }}\r\n      >\r\n        {ig.name} {ig.amount}\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={ss.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {props.price.toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Order;\r\n","import React, { useEffect } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Orders = (props) => {\r\n  useEffect(() => {\r\n    props.onFetchOrders(props.token, props.userId);\r\n    // axios\r\n    //   .get('/orders.json')\r\n    //   .then((res) => {\r\n    //     const fetchOrders = [];\r\n    //     for (let key in res.data) {\r\n    //       fetchOrders.push({ ...res.data[key], id: key });\r\n    //     }\r\n    //     setOrders(fetchOrders);\r\n    //     setLoading(false);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setLoading(false);\r\n    //   });\r\n  }, []);\r\n  let ord = <Spinner />;\r\n  if (!props.loading) {\r\n    ord = props.orders.map((order) => (\r\n      <Order\r\n        ingredients={order.ingredients}\r\n        price={+order.price}\r\n        key={order.id}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return <div>{ord}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}