{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","shared/utility.js","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["Input","props","inputElement","inputClasses","ss","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","className","join","elementConfig","value","onChange","changed","options","map","option","id","key","displayValue","Label","label","module","exports","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isNumeric","test","checkoutSummary","CheckoutSummary","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","actions","withErrorHandler","useState","name","type","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","orderForm","setOrderForm","IsValidate","setValidation","orderHandler","event","preventDefault","formData","formElementId","formElementsArray","config","form","onSubmit","formElement","inputId","updatedOrderForm","updatedFormElement","target","formIsValid","inputChangedHandler","disabled","Spinner","ContactData","axios","purchased","useEffect","summary","to","purchasedRedirect","history","goBack","replace","path","match","component"],"mappings":"qGAAA,qCAiEeA,IA7DD,SAACC,GACb,IAAIC,EAAe,KACbC,EAAe,CAACC,IAAGC,cAMzB,OAJIJ,EAAMK,SAAWL,EAAMM,gBAAkBN,EAAMO,SACjDL,EAAaM,KAAKL,IAAGM,SAGfT,EAAMU,aACZ,IAAK,QACHT,EACE,yCACEU,UAAWT,EAAaU,KAAK,MACzBZ,EAAMa,cAFZ,CAGEC,MAAOd,EAAMc,MACbC,SAAUf,EAAMgB,WAGpB,MACF,IAAK,WACHf,EACE,8CACMD,EAAMa,cADZ,CAEEC,MAAOd,EAAMc,MACbC,SAAUf,EAAMgB,WAGpB,MACF,IAAK,SACHf,EACE,4BACEU,UAAWT,EAAaU,KAAK,KAC7BE,MAAOd,EAAMc,MACbC,SAAUf,EAAMgB,SAEfhB,EAAMa,cAAcI,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAC/B,4BAAQC,IAAKD,EAAIN,MAAOK,EAAOL,OAC5BK,EAAOG,kBAKhB,MACF,QACErB,EACE,yCACEU,UAAWT,EAAaU,KAAK,MACzBZ,EAAMa,cAFZ,CAGEC,MAAOd,EAAMc,SAKrB,OACE,yBAAKH,UAAWR,IAAGJ,OACjB,2BAAOY,UAAWR,IAAGoB,OAAQvB,EAAMwB,OAClCvB,K,mBC3DPwB,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,gCCDjI,kCAAO,IAAMC,EAAgB,SAACb,EAAOc,GACnC,IAAIC,GAAU,EAWd,GATID,EAAME,WACRD,EAA2B,KAAjBf,EAAMiB,QAAiBF,GAE/BD,EAAMI,YACRH,EAAUf,EAAMmB,QAAUL,EAAMI,WAAaH,GAE3CD,EAAMM,YACRL,EAAUf,EAAMmB,QAAUL,EAAMM,WAAaL,GAE3CD,EAAMO,UAAW,CAEnBN,EADgB,QACEO,KAAKtB,IAAUe,EAGnC,OAAOA,I,mBChBTJ,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,4FCsB1DW,EAjBS,SAACrC,GACvB,OACE,yBAAKW,UAAWR,IAAGmC,iBACjB,uDACA,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnC,kBAACC,EAAA,EAAD,CAAQC,YAAa3C,EAAM2C,eAE7B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS9C,EAAM+C,mBAAxC,UAGA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS9C,EAAMgD,mBAAzC,c,+FCiMSC,eAhBS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAME,cAAcT,YAC1BU,MAAOH,EAAME,cAAcE,WAC3BC,QAASL,EAAMM,MAAMD,QACrBE,MAAOP,EAAMQ,KAAKD,MAClBE,OAAQT,EAAMQ,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACC,EAAWL,GAAZ,OACbG,EAASG,IAAuBD,EAAWL,QAGlCR,CAGbe,aAxMkB,SAAChE,GAAW,IAAD,EACKiE,mBAAS,CACzCC,KAAM,CACJxD,YAAa,QACbG,cAAe,CACbsD,KAAM,OACNC,YAAa,aAEftD,MAAO,GACPuD,WAAY,CACVvC,UAAU,GAEZwC,OAAO,EACP/D,SAAS,GAEXgE,OAAQ,CACN7D,YAAa,QACbG,cAAe,CACbsD,KAAM,OACNC,YAAa,UAEftD,MAAO,GACPuD,WAAY,CACVvC,UAAU,GAEZwC,OAAO,EACP/D,SAAS,GAEXiE,QAAS,CACP9D,YAAa,QACbG,cAAe,CACbsD,KAAM,OACNC,YAAa,YAEftD,MAAO,GACPuD,WAAY,CACVvC,UAAU,GAEZwC,OAAO,EACP/D,SAAS,GAEXkE,QAAS,CACP/D,YAAa,QACbG,cAAe,CACbsD,KAAM,OACNC,YAAa,WAEftD,MAAO,GACPuD,WAAY,CACVvC,UAAU,GAEZwC,OAAO,EACP/D,SAAS,GAEXmE,MAAO,CACLhE,YAAa,QACbG,cAAe,CACbsD,KAAM,QACNC,YAAa,eAEftD,MAAO,GACPuD,WAAY,CACVvC,UAAU,GAEZwC,OAAO,EACP/D,SAAS,GAEXoE,eAAgB,CACdjE,YAAa,SACbG,cAAe,CACbI,QAAS,CACP,CAAEH,MAAO,UAAWQ,aAAc,WAClC,CAAER,MAAO,WAAYQ,aAAc,aAErC8C,YAAa,IAEftD,MAAO,UACPwD,OAAO,EACPD,WAAY,MA9Ea,mBACtBO,EADsB,KACXC,EADW,OAiFOZ,oBAAS,GAjFhB,mBAiFtBa,EAjFsB,KAiFVC,EAjFU,KAmFvBC,EAAe,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAiBR,EACxBO,EAASC,GAAiBR,EAAUQ,GAAetE,MAGrD,IAAM0C,EAAQ,CACZb,YAAa3C,EAAMmD,KACnBE,MAAOrD,EAAMqD,MACbS,UAAWqB,EACXxB,OAAQ3D,EAAM2D,QAGhB3D,EAAM6D,cAAcL,EAAOxD,EAAMyD,QAG7B4B,EAAoB,GAC1B,IAAK,IAAIhE,KAAOuD,EACdS,EAAkB7E,KAAK,CACrBY,GAAIC,EACJiE,OAAQV,EAAUvD,KAuBtB,IAsBIkE,EACF,0BAAMC,SAAUR,GACbK,EAAkBnE,KAAI,SAACuE,GAAD,OACrB,kBAAC1F,EAAA,EAAD,CACEsB,IAAKoE,EAAYrE,GACjBV,YAAa+E,EAAYH,OAAO5E,YAChCG,cAAe4E,EAAYH,OAAOzE,cAClCC,MAAO2E,EAAYH,OAAOzE,cAAcC,MACxCT,SAAUoF,EAAYH,OAAOxE,MAC7BR,eAAgBmF,EAAYH,OAAOjB,WACnC9D,QAASkF,EAAYH,OAAO/E,QAC5BS,QAAS,SAACiE,GAAD,OAjCW,SAACA,EAAOS,GAClC,IAAMC,EAAgB,eACjBf,GAECgB,EAAkB,eACnBD,EAAiBD,IAEtBE,EAAmB9E,MAAQmE,EAAMY,OAAO/E,MACxC8E,EAAmBtB,MAAQ3C,YACzBiE,EAAmB9E,MACnB8E,EAAmBvB,YAErBsB,EAAiBD,GAAWE,EAC5BA,EAAmBrF,SAAU,EAC7B,IAAIuF,GAAc,EAClB,IAAK,IAAIJ,KAAWC,EAClBG,EAAcH,EAAiBD,GAASpB,OAASwB,EAEnDjB,EAAac,GACbZ,EAAce,GAcYC,CAAoBd,EAAOQ,EAAYrE,UAI/D,kBAACwB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASkC,EAAcgB,UAAWlB,GAA5D,UASJ,OAJI9E,EAAMuD,UACRgC,EAAO,kBAACU,EAAA,EAAD,OAIP,yBAAKtF,UAAWR,IAAG+F,aACjB,uDACCX,KAwByBY,MCnKjBlD,uBARS,SAACC,GACvB,MAAO,CACLC,KAAMD,EAAME,cAAcT,YAC1BU,MAAOH,EAAME,cAAcE,WAC3B8C,UAAWlD,EAAMM,MAAM4C,aAIZnD,EAzCE,SAACjD,GAChBqG,qBAAU,cAAU,IAEpB,IAQIC,EAAU,kBAAC,IAAD,CAAUC,GAAG,MAC3B,GAAIvG,EAAMmD,KAAM,CACd,IAAMqD,EAAoBxG,EAAMoG,UAAY,kBAAC,IAAD,CAAUG,GAAG,MAAS,KAClED,EACE,6BACGE,EACD,kBAAClE,EAAD,CACEK,YAAa3C,EAAMmD,KACnBJ,kBAhByB,WAC/B/C,EAAMyG,QAAQC,UAgBR1D,kBAbyB,WAC/BhD,EAAMyG,QAAQE,QAAQ,6BAclB,kBAAC,IAAD,CACEC,KAAM5G,EAAM6G,MAAMD,KAAO,gBACzBE,UAAWZ,KAMnB,OAAOI","file":"static/js/3.a1b7986a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport ss from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [ss.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(ss.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case 'input':\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'textarea':\r\n      inputElement = (\r\n        <textarea\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case 'select':\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(' ')}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((option, id) => (\r\n            <option key={id} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(' ')}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className={ss.Input}>\r\n      <label className={ss.Label}>{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1ERBd\",\"Label\":\"Input_Label__2LV4f\",\"InputElement\":\"Input_InputElement__2c43J\",\"Invalid\":\"Input_Invalid__3SNlw\"};","export const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n\r\n  if (rules.required) {\r\n    isValid = value.trim() !== '' && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__zzAiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1-HgG\",\"Input\":\"ContactData_Input__3eKhr\"};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport ss from '../CheckoutSummary/CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n  return (\r\n    <div className={ss.CheckoutSummary}>\r\n      <h1>We hope it tastes good!</h1>\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType='Danger' clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType='Success' clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport ss from '../ContactData/ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { checkValidity } from '../../../shared/utility';\r\n\r\nconst ContactData = (props) => {\r\n  const [orderForm, setOrderForm] = useState({\r\n    name: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'Your Name',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    street: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'Street',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    zipCode: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'ZIP Code',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    country: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'text',\r\n        placeholder: 'Country',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    email: {\r\n      elementType: 'input',\r\n      elementConfig: {\r\n        type: 'email',\r\n        placeholder: 'Your E-Mail',\r\n      },\r\n      value: '',\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n    },\r\n    deliveryMethod: {\r\n      elementType: 'select',\r\n      elementConfig: {\r\n        options: [\r\n          { value: 'fastest', displayValue: 'Fastest' },\r\n          { value: 'cheapest', displayValue: 'Cheapest' },\r\n        ],\r\n        placeholder: '',\r\n      },\r\n      value: 'fastest',\r\n      valid: true,\r\n      validation: {},\r\n    },\r\n  });\r\n  const [IsValidate, setValidation] = useState(false);\r\n\r\n  const orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (let formElementId in orderForm) {\r\n      formData[formElementId] = orderForm[formElementId].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: props.ings,\r\n      price: props.price,\r\n      orderData: formData,\r\n      userId: props.userId,\r\n    };\r\n\r\n    props.onOrderBurger(order, props.token);\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in orderForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: orderForm[key],\r\n    });\r\n  }\r\n\r\n  // const checkValidity = (value, rules) => {\r\n  //   let isValid = true;\r\n\r\n  //   if (rules.required) {\r\n  //     isValid = value.trim() !== '' && isValid;\r\n  //   }\r\n  //   if (rules.minLength) {\r\n  //     isValid = value.length >= rules.minLength && isValid;\r\n  //   }\r\n  //   if (rules.maxLength) {\r\n  //     isValid = value.length <= rules.maxLength && isValid;\r\n  //   }\r\n  //   if (rules.isNumeric) {\r\n  //     const pattern = /^\\d+$/;\r\n  //     isValid = pattern.test(value) && isValid;\r\n  //   }\r\n\r\n  //   return isValid;\r\n  // };\r\n  const inputChangedHandler = (event, inputId) => {\r\n    const updatedOrderForm = {\r\n      ...orderForm,\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputId],\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedOrderForm[inputId] = updatedFormElement;\r\n    updatedFormElement.touched = true;\r\n    let formIsValid = true;\r\n    for (let inputId in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\r\n    }\r\n    setOrderForm(updatedOrderForm);\r\n    setValidation(formIsValid);\r\n  };\r\n\r\n  let form = (\r\n    <form onSubmit={orderHandler}>\r\n      {formElementsArray.map((formElement) => (\r\n        <Input\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.elementConfig.value}\r\n          invalid={!formElement.config.value}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={(event) => inputChangedHandler(event, formElement.id)}\r\n        />\r\n      ))}\r\n\r\n      <Button btnType='Success' clicked={orderHandler} disabled={!IsValidate}>\r\n        ORDER\r\n      </Button>\r\n    </form>\r\n  );\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className={ss.ContactData}>\r\n      <h4>Enter your Contact Data</h4>\r\n      {form}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React from 'react';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Checkout = (props) => {\r\n  useEffect(() => {}, []);\r\n\r\n  const checkoutCancelledHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const checkoutContinuedHandler = () => {\r\n    props.history.replace('/checkout/contact-data');\r\n  };\r\n\r\n  let summary = <Redirect to='/' />;\r\n  if (props.ings) {\r\n    const purchasedRedirect = props.purchased ? <Redirect to='/' /> : null;\r\n    summary = (\r\n      <div>\r\n        {purchasedRedirect}\r\n        <CheckoutSummary\r\n          ingredients={props.ings}\r\n          checkoutCancelled={checkoutCancelledHandler}\r\n          checkoutContinued={checkoutContinuedHandler}\r\n        />\r\n        <Route\r\n          path={props.match.path + '/contact-data'}\r\n          component={ContactData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return summary;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}